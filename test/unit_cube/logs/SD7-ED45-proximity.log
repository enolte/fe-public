mesh_test.h, 74, write_header, `SD` = 7
mesh_test.h, 75, write_header, `ED` = 45
mesh_test.h, 76, write_header, `mesh::point_tolerance` = 8.88178e-16
mesh_test.h, 77, write_header, `fe::rank_tolerance(mesh{})` = 1.77636e-15
mesh_test.h, 78, write_header, `fe::span_tolerance(mesh{})` = 2.22045e-16
mesh_test.h, 79, write_header, `fe::cone_tolerance(mesh{})` = 1.77636e-15
mesh_test.h, 80, write_header, `fe::boundary_tolerance(mesh{})` = 8.88178e-16
mesh_test.h, 55, execute, Loading unit cube.
mesh_test.h, 60, execute, `points.size()` = 128
mesh_test.h, 86, execute, Constructing mesh.
mesh_constructor.h, 42, mesh_constructor, `m_strategy.name` = proximity
mesh_constructor.h, 83, construct
mesh_constructor.h, 113, adjoin, `ix_p` = 0
mesh_constructor_step1.h, 48, _step1, Seeking partitions of simplices at entry by the new point... no partition of a simplex at entry found.
mesh_constructor_step2.h, 40, _step2, Seeking vertex set...
strategy/proximity.h, 115, find_vertex_set, `counts.ntried` = 8
strategy/proximity.h, 116, find_vertex_set, `counts.nflat` = 7
strategy/proximity.h, 117, find_vertex_set, `counts.noverlapping` = 0
strategy/proximity.h, 118, find_vertex_set, `counts.nduplicate` = 0
mesh_constructor_step2.h, 50, _step2, found. Created new simplex candidate
mesh_constructor_step3.h, 43, _step3, Seeking partition of the new simplex by the point set at entry... no partition found.
mesh_constructor.h, 144, adjoin, Saving new indivisible simplex.
mesh_constructor.h, 147, adjoin, Done.
mesh_constructor.h, 113, adjoin, `ix_p` = 1
mesh_constructor_step0.h, 43, _step0, already a vertex
mesh_constructor.h, 113, adjoin, `ix_p` = 2
mesh_constructor_step0.h, 43, _step0, already a vertex
mesh_constructor.h, 113, adjoin, `ix_p` = 3
mesh_constructor_step1.h, 48, _step1, Seeking partitions of simplices at entry by the new point... no partition of a simplex at entry found.
mesh_constructor_step2.h, 40, _step2, Seeking vertex set...
strategy/proximity.h, 115, find_vertex_set, `counts.ntried` = 8
strategy/proximity.h, 116, find_vertex_set, `counts.nflat` = 7
strategy/proximity.h, 117, find_vertex_set, `counts.noverlapping` = 0
strategy/proximity.h, 118, find_vertex_set, `counts.nduplicate` = 0
mesh_constructor_step2.h, 50, _step2, found. Created new simplex candidate
mesh_constructor_step3.h, 43, _step3, Seeking partition of the new simplex by the point set at entry... no partition found.
mesh_constructor.h, 144, adjoin, Saving new indivisible simplex.
mesh_constructor.h, 147, adjoin, Done.
mesh_constructor.h, 113, adjoin, `ix_p` = 4
mesh_constructor_step0.h, 43, _step0, already a vertex
mesh_constructor.h, 113, adjoin, `ix_p` = 5
mesh_constructor_step1.h, 48, _step1, Seeking partitions of simplices at entry by the new point... no partition of a simplex at entry found.
mesh_constructor_step2.h, 40, _step2, Seeking vertex set...
strategy/proximity.h, 115, find_vertex_set, `counts.ntried` = 8
strategy/proximity.h, 116, find_vertex_set, `counts.nflat` = 7
strategy/proximity.h, 117, find_vertex_set, `counts.noverlapping` = 0
strategy/proximity.h, 118, find_vertex_set, `counts.nduplicate` = 0
mesh_constructor_step2.h, 50, _step2, found. Created new simplex candidate
mesh_constructor_step3.h, 43, _step3, Seeking partition of the new simplex by the point set at entry... no partition found.
mesh_constructor.h, 144, adjoin, Saving new indivisible simplex.
mesh_constructor.h, 147, adjoin, Done.
mesh_constructor.h, 113, adjoin, `ix_p` = 6
mesh_constructor_step1.h, 48, _step1, Seeking partitions of simplices at entry by the new point... no partition of a simplex at entry found.
mesh_constructor_step2.h, 40, _step2, Seeking vertex set...
strategy/proximity.h, 115, find_vertex_set, `counts.ntried` = 8
strategy/proximity.h, 116, find_vertex_set, `counts.nflat` = 7
strategy/proximity.h, 117, find_vertex_set, `counts.noverlapping` = 0
strategy/proximity.h, 118, find_vertex_set, `counts.nduplicate` = 0
mesh_constructor_step2.h, 50, _step2, found. Created new simplex candidate
mesh_constructor_step3.h, 43, _step3, Seeking partition of the new simplex by the point set at entry... no partition found.
mesh_constructor.h, 144, adjoin, Saving new indivisible simplex.
mesh_constructor.h, 147, adjoin, Done.
mesh_constructor.h, 113, adjoin, `ix_p` = 7
mesh_constructor_step0.h, 43, _step0, already a vertex
mesh_constructor.h, 113, adjoin, `ix_p` = 8
mesh_constructor_step0.h, 43, _step0, already a vertex
mesh_constructor.h, 113, adjoin, `ix_p` = 9
mesh_constructor_step1.h, 48, _step1, Seeking partitions of simplices at entry by the new point... no partition of a simplex at entry found.
mesh_constructor_step2.h, 40, _step2, Seeking vertex set...
strategy/proximity.h, 115, find_vertex_set, `counts.ntried` = 8
strategy/proximity.h, 116, find_vertex_set, `counts.nflat` = 7
strategy/proximity.h, 117, find_vertex_set, `counts.noverlapping` = 0
strategy/proximity.h, 118, find_vertex_set, `counts.nduplicate` = 0
mesh_constructor_step2.h, 50, _step2, found. Created new simplex candidate
mesh_constructor_step3.h, 43, _step3, Seeking partition of the new simplex by the point set at entry... no partition found.
mesh_constructor.h, 144, adjoin, Saving new indivisible simplex.
mesh_constructor.h, 147, adjoin, Done.
mesh_constructor.h, 113, adjoin, `ix_p` = 10
mesh_constructor_step1.h, 48, _step1, Seeking partitions of simplices at entry by the new point... no partition of a simplex at entry found.
mesh_constructor_step2.h, 40, _step2, Seeking vertex set...
strategy/proximity.h, 115, find_vertex_set, `counts.ntried` = 8
strategy/proximity.h, 116, find_vertex_set, `counts.nflat` = 7
strategy/proximity.h, 117, find_vertex_set, `counts.noverlapping` = 0
strategy/proximity.h, 118, find_vertex_set, `counts.nduplicate` = 0
mesh_constructor_step2.h, 50, _step2, found. Created new simplex candidate
mesh_constructor_step3.h, 43, _step3, Seeking partition of the new simplex by the point set at entry... no partition found.
mesh_constructor.h, 144, adjoin, Saving new indivisible simplex.
mesh_constructor.h, 147, adjoin, Done.
mesh_constructor.h, 113, adjoin, `ix_p` = 11
mesh_constructor_step0.h, 43, _step0, already a vertex
mesh_constructor.h, 113, adjoin, `ix_p` = 12
mesh_constructor_step1.h, 48, _step1, Seeking partitions of simplices at entry by the new point... no partition of a simplex at entry found.
mesh_constructor_step2.h, 40, _step2, Seeking vertex set...
strategy/proximity.h, 115, find_vertex_set, `counts.ntried` = 8
strategy/proximity.h, 116, find_vertex_set, `counts.nflat` = 7
strategy/proximity.h, 117, find_vertex_set, `counts.noverlapping` = 0
strategy/proximity.h, 118, find_vertex_set, `counts.nduplicate` = 0
mesh_constructor_step2.h, 50, _step2, found. Created new simplex candidate
mesh_constructor_step3.h, 43, _step3, Seeking partition of the new simplex by the point set at entry... no partition found.
mesh_constructor.h, 144, adjoin, Saving new indivisible simplex.
mesh_constructor.h, 147, adjoin, Done.
mesh_constructor.h, 113, adjoin, `ix_p` = 13
mesh_constructor_step0.h, 43, _step0, already a vertex
mesh_constructor.h, 113, adjoin, `ix_p` = 14
mesh_constructor_step0.h, 43, _step0, already a vertex
mesh_constructor.h, 113, adjoin, `ix_p` = 15
mesh_constructor_step1.h, 48, _step1, Seeking partitions of simplices at entry by the new point... no partition of a simplex at entry found.
mesh_constructor_step2.h, 40, _step2, Seeking vertex set...
strategy/proximity.h, 115, find_vertex_set, `counts.ntried` = 8
strategy/proximity.h, 116, find_vertex_set, `counts.nflat` = 7
strategy/proximity.h, 117, find_vertex_set, `counts.noverlapping` = 0
strategy/proximity.h, 118, find_vertex_set, `counts.nduplicate` = 0
mesh_constructor_step2.h, 50, _step2, found. Created new simplex candidate
mesh_constructor_step3.h, 43, _step3, Seeking partition of the new simplex by the point set at entry... no partition found.
mesh_constructor.h, 144, adjoin, Saving new indivisible simplex.
mesh_constructor.h, 147, adjoin, Done.
mesh_constructor.h, 113, adjoin, `ix_p` = 16
mesh_constructor_step0.h, 43, _step0, already a vertex
mesh_constructor.h, 113, adjoin, `ix_p` = 17
mesh_constructor_step1.h, 48, _step1, Seeking partitions of simplices at entry by the new point... no partition of a simplex at entry found.
mesh_constructor_step2.h, 40, _step2, Seeking vertex set...
strategy/proximity.h, 115, find_vertex_set, `counts.ntried` = 8
strategy/proximity.h, 116, find_vertex_set, `counts.nflat` = 7
strategy/proximity.h, 117, find_vertex_set, `counts.noverlapping` = 0
strategy/proximity.h, 118, find_vertex_set, `counts.nduplicate` = 0
mesh_constructor_step2.h, 50, _step2, found. Created new simplex candidate
mesh_constructor_step3.h, 43, _step3, Seeking partition of the new simplex by the point set at entry... no partition found.
mesh_constructor.h, 144, adjoin, Saving new indivisible simplex.
mesh_constructor.h, 147, adjoin, Done.
mesh_constructor.h, 113, adjoin, `ix_p` = 18
mesh_constructor_step1.h, 48, _step1, Seeking partitions of simplices at entry by the new point... no partition of a simplex at entry found.
mesh_constructor_step2.h, 40, _step2, Seeking vertex set...
strategy/proximity.h, 115, find_vertex_set, `counts.ntried` = 8
strategy/proximity.h, 116, find_vertex_set, `counts.nflat` = 7
strategy/proximity.h, 117, find_vertex_set, `counts.noverlapping` = 0
strategy/proximity.h, 118, find_vertex_set, `counts.nduplicate` = 0
mesh_constructor_step2.h, 50, _step2, found. Created new simplex candidate
mesh_constructor_step3.h, 43, _step3, Seeking partition of the new simplex by the point set at entry... no partition found.
mesh_constructor.h, 144, adjoin, Saving new indivisible simplex.
mesh_constructor.h, 147, adjoin, Done.
mesh_constructor.h, 113, adjoin, `ix_p` = 19
mesh_constructor_step0.h, 43, _step0, already a vertex
mesh_constructor.h, 113, adjoin, `ix_p` = 20
mesh_constructor_step1.h, 48, _step1, Seeking partitions of simplices at entry by the new point... no partition of a simplex at entry found.
mesh_constructor_step2.h, 40, _step2, Seeking vertex set...
strategy/proximity.h, 115, find_vertex_set, `counts.ntried` = 8
strategy/proximity.h, 116, find_vertex_set, `counts.nflat` = 7
strategy/proximity.h, 117, find_vertex_set, `counts.noverlapping` = 0
strategy/proximity.h, 118, find_vertex_set, `counts.nduplicate` = 0
mesh_constructor_step2.h, 50, _step2, found. Created new simplex candidate
mesh_constructor_step3.h, 43, _step3, Seeking partition of the new simplex by the point set at entry... no partition found.
mesh_constructor.h, 144, adjoin, Saving new indivisible simplex.
mesh_constructor.h, 147, adjoin, Done.
mesh_constructor.h, 113, adjoin, `ix_p` = 21
mesh_constructor_step0.h, 43, _step0, already a vertex
mesh_constructor.h, 113, adjoin, `ix_p` = 22
mesh_constructor_step0.h, 43, _step0, already a vertex
mesh_constructor.h, 113, adjoin, `ix_p` = 23
mesh_constructor_step1.h, 48, _step1, Seeking partitions of simplices at entry by the new point... no partition of a simplex at entry found.
mesh_constructor_step2.h, 40, _step2, Seeking vertex set...
strategy/proximity.h, 115, find_vertex_set, `counts.ntried` = 8
strategy/proximity.h, 116, find_vertex_set, `counts.nflat` = 7
strategy/proximity.h, 117, find_vertex_set, `counts.noverlapping` = 0
strategy/proximity.h, 118, find_vertex_set, `counts.nduplicate` = 0
mesh_constructor_step2.h, 50, _step2, found. Created new simplex candidate
mesh_constructor_step3.h, 43, _step3, Seeking partition of the new simplex by the point set at entry... no partition found.
mesh_constructor.h, 144, adjoin, Saving new indivisible simplex.
mesh_constructor.h, 147, adjoin, Done.
mesh_constructor.h, 113, adjoin, `ix_p` = 24
mesh_constructor_step1.h, 48, _step1, Seeking partitions of simplices at entry by the new point... no partition of a simplex at entry found.
mesh_constructor_step2.h, 40, _step2, Seeking vertex set...
strategy/proximity.h, 115, find_vertex_set, `counts.ntried` = 8
strategy/proximity.h, 116, find_vertex_set, `counts.nflat` = 7
strategy/proximity.h, 117, find_vertex_set, `counts.noverlapping` = 0
strategy/proximity.h, 118, find_vertex_set, `counts.nduplicate` = 0
mesh_constructor_step2.h, 50, _step2, found. Created new simplex candidate
mesh_constructor_step3.h, 43, _step3, Seeking partition of the new simplex by the point set at entry... no partition found.
mesh_constructor.h, 144, adjoin, Saving new indivisible simplex.
mesh_constructor.h, 147, adjoin, Done.
mesh_constructor.h, 113, adjoin, `ix_p` = 25
mesh_constructor_step0.h, 43, _step0, already a vertex
mesh_constructor.h, 113, adjoin, `ix_p` = 26
mesh_constructor_step0.h, 43, _step0, already a vertex
mesh_constructor.h, 113, adjoin, `ix_p` = 27
mesh_constructor_step1.h, 48, _step1, Seeking partitions of simplices at entry by the new point... no partition of a simplex at entry found.
mesh_constructor_step2.h, 40, _step2, Seeking vertex set...
strategy/proximity.h, 115, find_vertex_set, `counts.ntried` = 8
strategy/proximity.h, 116, find_vertex_set, `counts.nflat` = 7
strategy/proximity.h, 117, find_vertex_set, `counts.noverlapping` = 0
strategy/proximity.h, 118, find_vertex_set, `counts.nduplicate` = 0
mesh_constructor_step2.h, 50, _step2, found. Created new simplex candidate
mesh_constructor_step3.h, 43, _step3, Seeking partition of the new simplex by the point set at entry... no partition found.
mesh_constructor.h, 144, adjoin, Saving new indivisible simplex.
mesh_constructor.h, 147, adjoin, Done.
mesh_constructor.h, 113, adjoin, `ix_p` = 28
mesh_constructor_step0.h, 43, _step0, already a vertex
mesh_constructor.h, 113, adjoin, `ix_p` = 29
mesh_constructor_step1.h, 48, _step1, Seeking partitions of simplices at entry by the new point... no partition of a simplex at entry found.
mesh_constructor_step2.h, 40, _step2, Seeking vertex set...
strategy/proximity.h, 115, find_vertex_set, `counts.ntried` = 8
strategy/proximity.h, 116, find_vertex_set, `counts.nflat` = 7
strategy/proximity.h, 117, find_vertex_set, `counts.noverlapping` = 0
strategy/proximity.h, 118, find_vertex_set, `counts.nduplicate` = 0
mesh_constructor_step2.h, 50, _step2, found. Created new simplex candidate
mesh_constructor_step3.h, 43, _step3, Seeking partition of the new simplex by the point set at entry... no partition found.
mesh_constructor.h, 144, adjoin, Saving new indivisible simplex.
mesh_constructor.h, 147, adjoin, Done.
mesh_constructor.h, 113, adjoin, `ix_p` = 30
mesh_constructor_step1.h, 48, _step1, Seeking partitions of simplices at entry by the new point... no partition of a simplex at entry found.
mesh_constructor_step2.h, 40, _step2, Seeking vertex set...
strategy/proximity.h, 115, find_vertex_set, `counts.ntried` = 8
strategy/proximity.h, 116, find_vertex_set, `counts.nflat` = 7
strategy/proximity.h, 117, find_vertex_set, `counts.noverlapping` = 0
strategy/proximity.h, 118, find_vertex_set, `counts.nduplicate` = 0
mesh_constructor_step2.h, 50, _step2, found. Created new simplex candidate
mesh_constructor_step3.h, 43, _step3, Seeking partition of the new simplex by the point set at entry... no partition found.
mesh_constructor.h, 144, adjoin, Saving new indivisible simplex.
mesh_constructor.h, 147, adjoin, Done.
mesh_constructor.h, 113, adjoin, `ix_p` = 31
mesh_constructor_step0.h, 43, _step0, already a vertex
mesh_constructor.h, 113, adjoin, `ix_p` = 32
mesh_constructor_step0.h, 43, _step0, already a vertex
mesh_constructor.h, 113, adjoin, `ix_p` = 33
mesh_constructor_step1.h, 48, _step1, Seeking partitions of simplices at entry by the new point... no partition of a simplex at entry found.
mesh_constructor_step2.h, 40, _step2, Seeking vertex set...
strategy/proximity.h, 115, find_vertex_set, `counts.ntried` = 8
strategy/proximity.h, 116, find_vertex_set, `counts.nflat` = 7
strategy/proximity.h, 117, find_vertex_set, `counts.noverlapping` = 0
strategy/proximity.h, 118, find_vertex_set, `counts.nduplicate` = 0
mesh_constructor_step2.h, 50, _step2, found. Created new simplex candidate
mesh_constructor_step3.h, 43, _step3, Seeking partition of the new simplex by the point set at entry... no partition found.
mesh_constructor.h, 144, adjoin, Saving new indivisible simplex.
mesh_constructor.h, 147, adjoin, Done.
mesh_constructor.h, 113, adjoin, `ix_p` = 34
mesh_constructor_step1.h, 48, _step1, Seeking partitions of simplices at entry by the new point... no partition of a simplex at entry found.
mesh_constructor_step2.h, 40, _step2, Seeking vertex set...
strategy/proximity.h, 115, find_vertex_set, `counts.ntried` = 8
strategy/proximity.h, 116, find_vertex_set, `counts.nflat` = 7
strategy/proximity.h, 117, find_vertex_set, `counts.noverlapping` = 0
strategy/proximity.h, 118, find_vertex_set, `counts.nduplicate` = 0
mesh_constructor_step2.h, 50, _step2, found. Created new simplex candidate
mesh_constructor_step3.h, 43, _step3, Seeking partition of the new simplex by the point set at entry... no partition found.
mesh_constructor.h, 144, adjoin, Saving new indivisible simplex.
mesh_constructor.h, 147, adjoin, Done.
mesh_constructor.h, 113, adjoin, `ix_p` = 35
mesh_constructor_step0.h, 43, _step0, already a vertex
mesh_constructor.h, 113, adjoin, `ix_p` = 36
mesh_constructor_step1.h, 48, _step1, Seeking partitions of simplices at entry by the new point... no partition of a simplex at entry found.
mesh_constructor_step2.h, 40, _step2, Seeking vertex set...
strategy/proximity.h, 115, find_vertex_set, `counts.ntried` = 8
strategy/proximity.h, 116, find_vertex_set, `counts.nflat` = 7
strategy/proximity.h, 117, find_vertex_set, `counts.noverlapping` = 0
strategy/proximity.h, 118, find_vertex_set, `counts.nduplicate` = 0
mesh_constructor_step2.h, 50, _step2, found. Created new simplex candidate
mesh_constructor_step3.h, 43, _step3, Seeking partition of the new simplex by the point set at entry... no partition found.
mesh_constructor.h, 144, adjoin, Saving new indivisible simplex.
mesh_constructor.h, 147, adjoin, Done.
mesh_constructor.h, 113, adjoin, `ix_p` = 37
mesh_constructor_step0.h, 43, _step0, already a vertex
mesh_constructor.h, 113, adjoin, `ix_p` = 38
mesh_constructor_step0.h, 43, _step0, already a vertex
mesh_constructor.h, 113, adjoin, `ix_p` = 39
mesh_constructor_step1.h, 48, _step1, Seeking partitions of simplices at entry by the new point... no partition of a simplex at entry found.
mesh_constructor_step2.h, 40, _step2, Seeking vertex set...
strategy/proximity.h, 115, find_vertex_set, `counts.ntried` = 8
strategy/proximity.h, 116, find_vertex_set, `counts.nflat` = 7
strategy/proximity.h, 117, find_vertex_set, `counts.noverlapping` = 0
strategy/proximity.h, 118, find_vertex_set, `counts.nduplicate` = 0
mesh_constructor_step2.h, 50, _step2, found. Created new simplex candidate
mesh_constructor_step3.h, 43, _step3, Seeking partition of the new simplex by the point set at entry... no partition found.
mesh_constructor.h, 144, adjoin, Saving new indivisible simplex.
mesh_constructor.h, 147, adjoin, Done.
mesh_constructor.h, 113, adjoin, `ix_p` = 40
mesh_constructor_step1.h, 48, _step1, Seeking partitions of simplices at entry by the new point... no partition of a simplex at entry found.
mesh_constructor_step2.h, 40, _step2, Seeking vertex set...
strategy/proximity.h, 115, find_vertex_set, `counts.ntried` = 8
strategy/proximity.h, 116, find_vertex_set, `counts.nflat` = 7
strategy/proximity.h, 117, find_vertex_set, `counts.noverlapping` = 0
strategy/proximity.h, 118, find_vertex_set, `counts.nduplicate` = 0
mesh_constructor_step2.h, 50, _step2, found. Created new simplex candidate
mesh_constructor_step3.h, 43, _step3, Seeking partition of the new simplex by the point set at entry... no partition found.
mesh_constructor.h, 144, adjoin, Saving new indivisible simplex.
mesh_constructor.h, 147, adjoin, Done.
mesh_constructor.h, 113, adjoin, `ix_p` = 41
mesh_constructor_step0.h, 43, _step0, already a vertex
mesh_constructor.h, 113, adjoin, `ix_p` = 42
mesh_constructor_step0.h, 43, _step0, already a vertex
mesh_constructor.h, 113, adjoin, `ix_p` = 43
mesh_constructor_step1.h, 48, _step1, Seeking partitions of simplices at entry by the new point... no partition of a simplex at entry found.
mesh_constructor_step2.h, 40, _step2, Seeking vertex set...
strategy/proximity.h, 115, find_vertex_set, `counts.ntried` = 8
strategy/proximity.h, 116, find_vertex_set, `counts.nflat` = 7
strategy/proximity.h, 117, find_vertex_set, `counts.noverlapping` = 0
strategy/proximity.h, 118, find_vertex_set, `counts.nduplicate` = 0
mesh_constructor_step2.h, 50, _step2, found. Created new simplex candidate
mesh_constructor_step3.h, 43, _step3, Seeking partition of the new simplex by the point set at entry... no partition found.
mesh_constructor.h, 144, adjoin, Saving new indivisible simplex.
mesh_constructor.h, 147, adjoin, Done.
mesh_constructor.h, 113, adjoin, `ix_p` = 44
mesh_constructor_step0.h, 43, _step0, already a vertex
mesh_constructor.h, 113, adjoin, `ix_p` = 45
mesh_constructor_step1.h, 48, _step1, Seeking partitions of simplices at entry by the new point... no partition of a simplex at entry found.
mesh_constructor_step2.h, 40, _step2, Seeking vertex set...
strategy/proximity.h, 115, find_vertex_set, `counts.ntried` = 8
strategy/proximity.h, 116, find_vertex_set, `counts.nflat` = 7
strategy/proximity.h, 117, find_vertex_set, `counts.noverlapping` = 0
strategy/proximity.h, 118, find_vertex_set, `counts.nduplicate` = 0
mesh_constructor_step2.h, 50, _step2, found. Created new simplex candidate
mesh_constructor_step3.h, 43, _step3, Seeking partition of the new simplex by the point set at entry... no partition found.
mesh_constructor.h, 144, adjoin, Saving new indivisible simplex.
mesh_constructor.h, 147, adjoin, Done.
mesh_constructor.h, 113, adjoin, `ix_p` = 46
mesh_constructor_step1.h, 48, _step1, Seeking partitions of simplices at entry by the new point... no partition of a simplex at entry found.
mesh_constructor_step2.h, 40, _step2, Seeking vertex set...
strategy/proximity.h, 115, find_vertex_set, `counts.ntried` = 8
strategy/proximity.h, 116, find_vertex_set, `counts.nflat` = 7
strategy/proximity.h, 117, find_vertex_set, `counts.noverlapping` = 0
strategy/proximity.h, 118, find_vertex_set, `counts.nduplicate` = 0
mesh_constructor_step2.h, 50, _step2, found. Created new simplex candidate
mesh_constructor_step3.h, 43, _step3, Seeking partition of the new simplex by the point set at entry... no partition found.
mesh_constructor.h, 144, adjoin, Saving new indivisible simplex.
mesh_constructor.h, 147, adjoin, Done.
mesh_constructor.h, 113, adjoin, `ix_p` = 47
mesh_constructor_step0.h, 43, _step0, already a vertex
mesh_constructor.h, 113, adjoin, `ix_p` = 48
mesh_constructor_step1.h, 48, _step1, Seeking partitions of simplices at entry by the new point... no partition of a simplex at entry found.
mesh_constructor_step2.h, 40, _step2, Seeking vertex set...
strategy/proximity.h, 115, find_vertex_set, `counts.ntried` = 8
strategy/proximity.h, 116, find_vertex_set, `counts.nflat` = 7
strategy/proximity.h, 117, find_vertex_set, `counts.noverlapping` = 0
strategy/proximity.h, 118, find_vertex_set, `counts.nduplicate` = 0
mesh_constructor_step2.h, 50, _step2, found. Created new simplex candidate
mesh_constructor_step3.h, 43, _step3, Seeking partition of the new simplex by the point set at entry... no partition found.
mesh_constructor.h, 144, adjoin, Saving new indivisible simplex.
mesh_constructor.h, 147, adjoin, Done.
mesh_constructor.h, 113, adjoin, `ix_p` = 49
mesh_constructor_step0.h, 43, _step0, already a vertex
mesh_constructor.h, 113, adjoin, `ix_p` = 50
mesh_constructor_step0.h, 43, _step0, already a vertex
mesh_constructor.h, 113, adjoin, `ix_p` = 51
mesh_constructor_step1.h, 48, _step1, Seeking partitions of simplices at entry by the new point... no partition of a simplex at entry found.
mesh_constructor_step2.h, 40, _step2, Seeking vertex set...
strategy/proximity.h, 115, find_vertex_set, `counts.ntried` = 8
strategy/proximity.h, 116, find_vertex_set, `counts.nflat` = 7
strategy/proximity.h, 117, find_vertex_set, `counts.noverlapping` = 0
strategy/proximity.h, 118, find_vertex_set, `counts.nduplicate` = 0
mesh_constructor_step2.h, 50, _step2, found. Created new simplex candidate
mesh_constructor_step3.h, 43, _step3, Seeking partition of the new simplex by the point set at entry... no partition found.
mesh_constructor.h, 144, adjoin, Saving new indivisible simplex.
mesh_constructor.h, 147, adjoin, Done.
mesh_constructor.h, 113, adjoin, `ix_p` = 52
mesh_constructor_step0.h, 43, _step0, already a vertex
mesh_constructor.h, 113, adjoin, `ix_p` = 53
mesh_constructor_step1.h, 48, _step1, Seeking partitions of simplices at entry by the new point... no partition of a simplex at entry found.
mesh_constructor_step2.h, 40, _step2, Seeking vertex set...
strategy/proximity.h, 115, find_vertex_set, `counts.ntried` = 8
strategy/proximity.h, 116, find_vertex_set, `counts.nflat` = 7
strategy/proximity.h, 117, find_vertex_set, `counts.noverlapping` = 0
strategy/proximity.h, 118, find_vertex_set, `counts.nduplicate` = 0
mesh_constructor_step2.h, 50, _step2, found. Created new simplex candidate
mesh_constructor_step3.h, 43, _step3, Seeking partition of the new simplex by the point set at entry... no partition found.
mesh_constructor.h, 144, adjoin, Saving new indivisible simplex.
mesh_constructor.h, 147, adjoin, Done.
mesh_constructor.h, 113, adjoin, `ix_p` = 54
mesh_constructor_step1.h, 48, _step1, Seeking partitions of simplices at entry by the new point... no partition of a simplex at entry found.
mesh_constructor_step2.h, 40, _step2, Seeking vertex set...
strategy/proximity.h, 115, find_vertex_set, `counts.ntried` = 8
strategy/proximity.h, 116, find_vertex_set, `counts.nflat` = 7
strategy/proximity.h, 117, find_vertex_set, `counts.noverlapping` = 0
strategy/proximity.h, 118, find_vertex_set, `counts.nduplicate` = 0
mesh_constructor_step2.h, 50, _step2, found. Created new simplex candidate
mesh_constructor_step3.h, 43, _step3, Seeking partition of the new simplex by the point set at entry... no partition found.
mesh_constructor.h, 144, adjoin, Saving new indivisible simplex.
mesh_constructor.h, 147, adjoin, Done.
mesh_constructor.h, 113, adjoin, `ix_p` = 55
mesh_constructor_step0.h, 43, _step0, already a vertex
mesh_constructor.h, 113, adjoin, `ix_p` = 56
mesh_constructor_step0.h, 43, _step0, already a vertex
mesh_constructor.h, 113, adjoin, `ix_p` = 57
mesh_constructor_step1.h, 48, _step1, Seeking partitions of simplices at entry by the new point... no partition of a simplex at entry found.
mesh_constructor_step2.h, 40, _step2, Seeking vertex set...
strategy/proximity.h, 115, find_vertex_set, `counts.ntried` = 8
strategy/proximity.h, 116, find_vertex_set, `counts.nflat` = 7
strategy/proximity.h, 117, find_vertex_set, `counts.noverlapping` = 0
strategy/proximity.h, 118, find_vertex_set, `counts.nduplicate` = 0
mesh_constructor_step2.h, 50, _step2, found. Created new simplex candidate
mesh_constructor_step3.h, 43, _step3, Seeking partition of the new simplex by the point set at entry... no partition found.
mesh_constructor.h, 144, adjoin, Saving new indivisible simplex.
mesh_constructor.h, 147, adjoin, Done.
mesh_constructor.h, 113, adjoin, `ix_p` = 58
mesh_constructor_step1.h, 48, _step1, Seeking partitions of simplices at entry by the new point... no partition of a simplex at entry found.
mesh_constructor_step2.h, 40, _step2, Seeking vertex set...
strategy/proximity.h, 115, find_vertex_set, `counts.ntried` = 8
strategy/proximity.h, 116, find_vertex_set, `counts.nflat` = 7
strategy/proximity.h, 117, find_vertex_set, `counts.noverlapping` = 0
strategy/proximity.h, 118, find_vertex_set, `counts.nduplicate` = 0
mesh_constructor_step2.h, 50, _step2, found. Created new simplex candidate
mesh_constructor_step3.h, 43, _step3, Seeking partition of the new simplex by the point set at entry... no partition found.
mesh_constructor.h, 144, adjoin, Saving new indivisible simplex.
mesh_constructor.h, 147, adjoin, Done.
mesh_constructor.h, 113, adjoin, `ix_p` = 59
mesh_constructor_step0.h, 43, _step0, already a vertex
mesh_constructor.h, 113, adjoin, `ix_p` = 60
mesh_constructor_step1.h, 48, _step1, Seeking partitions of simplices at entry by the new point... no partition of a simplex at entry found.
mesh_constructor_step2.h, 40, _step2, Seeking vertex set...
strategy/proximity.h, 115, find_vertex_set, `counts.ntried` = 8
strategy/proximity.h, 116, find_vertex_set, `counts.nflat` = 7
strategy/proximity.h, 117, find_vertex_set, `counts.noverlapping` = 0
strategy/proximity.h, 118, find_vertex_set, `counts.nduplicate` = 0
mesh_constructor_step2.h, 50, _step2, found. Created new simplex candidate
mesh_constructor_step3.h, 43, _step3, Seeking partition of the new simplex by the point set at entry... no partition found.
mesh_constructor.h, 144, adjoin, Saving new indivisible simplex.
mesh_constructor.h, 147, adjoin, Done.
mesh_constructor.h, 113, adjoin, `ix_p` = 61
mesh_constructor_step0.h, 43, _step0, already a vertex
mesh_constructor.h, 113, adjoin, `ix_p` = 62
mesh_constructor_step0.h, 43, _step0, already a vertex
mesh_constructor.h, 113, adjoin, `ix_p` = 63
mesh_constructor_step1.h, 48, _step1, Seeking partitions of simplices at entry by the new point... no partition of a simplex at entry found.
mesh_constructor_step2.h, 40, _step2, Seeking vertex set...
strategy/proximity.h, 115, find_vertex_set, `counts.ntried` = 8
strategy/proximity.h, 116, find_vertex_set, `counts.nflat` = 7
strategy/proximity.h, 117, find_vertex_set, `counts.noverlapping` = 0
strategy/proximity.h, 118, find_vertex_set, `counts.nduplicate` = 0
mesh_constructor_step2.h, 50, _step2, found. Created new simplex candidate
mesh_constructor_step3.h, 43, _step3, Seeking partition of the new simplex by the point set at entry... no partition found.
mesh_constructor.h, 144, adjoin, Saving new indivisible simplex.
mesh_constructor.h, 147, adjoin, Done.
mesh_constructor.h, 113, adjoin, `ix_p` = 64
mesh_constructor_step0.h, 43, _step0, already a vertex
mesh_constructor.h, 113, adjoin, `ix_p` = 65
mesh_constructor_step1.h, 48, _step1, Seeking partitions of simplices at entry by the new point... no partition of a simplex at entry found.
mesh_constructor_step2.h, 40, _step2, Seeking vertex set...
strategy/proximity.h, 115, find_vertex_set, `counts.ntried` = 8
strategy/proximity.h, 116, find_vertex_set, `counts.nflat` = 7
strategy/proximity.h, 117, find_vertex_set, `counts.noverlapping` = 0
strategy/proximity.h, 118, find_vertex_set, `counts.nduplicate` = 0
mesh_constructor_step2.h, 50, _step2, found. Created new simplex candidate
mesh_constructor_step3.h, 43, _step3, Seeking partition of the new simplex by the point set at entry... no partition found.
mesh_constructor.h, 144, adjoin, Saving new indivisible simplex.
mesh_constructor.h, 147, adjoin, Done.
mesh_constructor.h, 113, adjoin, `ix_p` = 66
mesh_constructor_step1.h, 48, _step1, Seeking partitions of simplices at entry by the new point... no partition of a simplex at entry found.
mesh_constructor_step2.h, 40, _step2, Seeking vertex set...
strategy/proximity.h, 115, find_vertex_set, `counts.ntried` = 8
strategy/proximity.h, 116, find_vertex_set, `counts.nflat` = 7
strategy/proximity.h, 117, find_vertex_set, `counts.noverlapping` = 0
strategy/proximity.h, 118, find_vertex_set, `counts.nduplicate` = 0
mesh_constructor_step2.h, 50, _step2, found. Created new simplex candidate
mesh_constructor_step3.h, 43, _step3, Seeking partition of the new simplex by the point set at entry... no partition found.
mesh_constructor.h, 144, adjoin, Saving new indivisible simplex.
mesh_constructor.h, 147, adjoin, Done.
mesh_constructor.h, 113, adjoin, `ix_p` = 67
mesh_constructor_step0.h, 43, _step0, already a vertex
mesh_constructor.h, 113, adjoin, `ix_p` = 68
mesh_constructor_step1.h, 48, _step1, Seeking partitions of simplices at entry by the new point... no partition of a simplex at entry found.
mesh_constructor_step2.h, 40, _step2, Seeking vertex set...
strategy/proximity.h, 115, find_vertex_set, `counts.ntried` = 8
strategy/proximity.h, 116, find_vertex_set, `counts.nflat` = 7
strategy/proximity.h, 117, find_vertex_set, `counts.noverlapping` = 0
strategy/proximity.h, 118, find_vertex_set, `counts.nduplicate` = 0
mesh_constructor_step2.h, 50, _step2, found. Created new simplex candidate
mesh_constructor_step3.h, 43, _step3, Seeking partition of the new simplex by the point set at entry... no partition found.
mesh_constructor.h, 144, adjoin, Saving new indivisible simplex.
mesh_constructor.h, 147, adjoin, Done.
mesh_constructor.h, 113, adjoin, `ix_p` = 69
mesh_constructor_step0.h, 43, _step0, already a vertex
mesh_constructor.h, 113, adjoin, `ix_p` = 70
mesh_constructor_step0.h, 43, _step0, already a vertex
mesh_constructor.h, 113, adjoin, `ix_p` = 71
mesh_constructor_step1.h, 48, _step1, Seeking partitions of simplices at entry by the new point... no partition of a simplex at entry found.
mesh_constructor_step2.h, 40, _step2, Seeking vertex set...
strategy/proximity.h, 115, find_vertex_set, `counts.ntried` = 8
strategy/proximity.h, 116, find_vertex_set, `counts.nflat` = 7
strategy/proximity.h, 117, find_vertex_set, `counts.noverlapping` = 0
strategy/proximity.h, 118, find_vertex_set, `counts.nduplicate` = 0
mesh_constructor_step2.h, 50, _step2, found. Created new simplex candidate
mesh_constructor_step3.h, 43, _step3, Seeking partition of the new simplex by the point set at entry... no partition found.
mesh_constructor.h, 144, adjoin, Saving new indivisible simplex.
mesh_constructor.h, 147, adjoin, Done.
mesh_constructor.h, 113, adjoin, `ix_p` = 72
mesh_constructor_step1.h, 48, _step1, Seeking partitions of simplices at entry by the new point... no partition of a simplex at entry found.
mesh_constructor_step2.h, 40, _step2, Seeking vertex set...
strategy/proximity.h, 115, find_vertex_set, `counts.ntried` = 8
strategy/proximity.h, 116, find_vertex_set, `counts.nflat` = 7
strategy/proximity.h, 117, find_vertex_set, `counts.noverlapping` = 0
strategy/proximity.h, 118, find_vertex_set, `counts.nduplicate` = 0
mesh_constructor_step2.h, 50, _step2, found. Created new simplex candidate
mesh_constructor_step3.h, 43, _step3, Seeking partition of the new simplex by the point set at entry... no partition found.
mesh_constructor.h, 144, adjoin, Saving new indivisible simplex.
mesh_constructor.h, 147, adjoin, Done.
mesh_constructor.h, 113, adjoin, `ix_p` = 73
mesh_constructor_step0.h, 43, _step0, already a vertex
mesh_constructor.h, 113, adjoin, `ix_p` = 74
mesh_constructor_step0.h, 43, _step0, already a vertex
mesh_constructor.h, 113, adjoin, `ix_p` = 75
mesh_constructor_step1.h, 48, _step1, Seeking partitions of simplices at entry by the new point... no partition of a simplex at entry found.
mesh_constructor_step2.h, 40, _step2, Seeking vertex set...
strategy/proximity.h, 115, find_vertex_set, `counts.ntried` = 8
strategy/proximity.h, 116, find_vertex_set, `counts.nflat` = 7
strategy/proximity.h, 117, find_vertex_set, `counts.noverlapping` = 0
strategy/proximity.h, 118, find_vertex_set, `counts.nduplicate` = 0
mesh_constructor_step2.h, 50, _step2, found. Created new simplex candidate
mesh_constructor_step3.h, 43, _step3, Seeking partition of the new simplex by the point set at entry... no partition found.
mesh_constructor.h, 144, adjoin, Saving new indivisible simplex.
mesh_constructor.h, 147, adjoin, Done.
mesh_constructor.h, 113, adjoin, `ix_p` = 76
mesh_constructor_step0.h, 43, _step0, already a vertex
mesh_constructor.h, 113, adjoin, `ix_p` = 77
mesh_constructor_step1.h, 48, _step1, Seeking partitions of simplices at entry by the new point... no partition of a simplex at entry found.
mesh_constructor_step2.h, 40, _step2, Seeking vertex set...
strategy/proximity.h, 115, find_vertex_set, `counts.ntried` = 8
strategy/proximity.h, 116, find_vertex_set, `counts.nflat` = 7
strategy/proximity.h, 117, find_vertex_set, `counts.noverlapping` = 0
strategy/proximity.h, 118, find_vertex_set, `counts.nduplicate` = 0
mesh_constructor_step2.h, 50, _step2, found. Created new simplex candidate
mesh_constructor_step3.h, 43, _step3, Seeking partition of the new simplex by the point set at entry... no partition found.
mesh_constructor.h, 144, adjoin, Saving new indivisible simplex.
mesh_constructor.h, 147, adjoin, Done.
mesh_constructor.h, 113, adjoin, `ix_p` = 78
mesh_constructor_step1.h, 48, _step1, Seeking partitions of simplices at entry by the new point... no partition of a simplex at entry found.
mesh_constructor_step2.h, 40, _step2, Seeking vertex set...
strategy/proximity.h, 115, find_vertex_set, `counts.ntried` = 8
strategy/proximity.h, 116, find_vertex_set, `counts.nflat` = 7
strategy/proximity.h, 117, find_vertex_set, `counts.noverlapping` = 0
strategy/proximity.h, 118, find_vertex_set, `counts.nduplicate` = 0
mesh_constructor_step2.h, 50, _step2, found. Created new simplex candidate
mesh_constructor_step3.h, 43, _step3, Seeking partition of the new simplex by the point set at entry... no partition found.
mesh_constructor.h, 144, adjoin, Saving new indivisible simplex.
mesh_constructor.h, 147, adjoin, Done.
mesh_constructor.h, 113, adjoin, `ix_p` = 79
mesh_constructor_step0.h, 43, _step0, already a vertex
mesh_constructor.h, 113, adjoin, `ix_p` = 80
mesh_constructor_step1.h, 48, _step1, Seeking partitions of simplices at entry by the new point... no partition of a simplex at entry found.
mesh_constructor_step2.h, 40, _step2, Seeking vertex set...
strategy/proximity.h, 115, find_vertex_set, `counts.ntried` = 8
strategy/proximity.h, 116, find_vertex_set, `counts.nflat` = 7
strategy/proximity.h, 117, find_vertex_set, `counts.noverlapping` = 0
strategy/proximity.h, 118, find_vertex_set, `counts.nduplicate` = 0
mesh_constructor_step2.h, 50, _step2, found. Created new simplex candidate
mesh_constructor_step3.h, 43, _step3, Seeking partition of the new simplex by the point set at entry... no partition found.
mesh_constructor.h, 144, adjoin, Saving new indivisible simplex.
mesh_constructor.h, 147, adjoin, Done.
mesh_constructor.h, 113, adjoin, `ix_p` = 81
mesh_constructor_step0.h, 43, _step0, already a vertex
mesh_constructor.h, 113, adjoin, `ix_p` = 82
mesh_constructor_step0.h, 43, _step0, already a vertex
mesh_constructor.h, 113, adjoin, `ix_p` = 83
mesh_constructor_step1.h, 48, _step1, Seeking partitions of simplices at entry by the new point... no partition of a simplex at entry found.
mesh_constructor_step2.h, 40, _step2, Seeking vertex set...
strategy/proximity.h, 115, find_vertex_set, `counts.ntried` = 8
strategy/proximity.h, 116, find_vertex_set, `counts.nflat` = 7
strategy/proximity.h, 117, find_vertex_set, `counts.noverlapping` = 0
strategy/proximity.h, 118, find_vertex_set, `counts.nduplicate` = 0
mesh_constructor_step2.h, 50, _step2, found. Created new simplex candidate
mesh_constructor_step3.h, 43, _step3, Seeking partition of the new simplex by the point set at entry... no partition found.
mesh_constructor.h, 144, adjoin, Saving new indivisible simplex.
mesh_constructor.h, 147, adjoin, Done.
mesh_constructor.h, 113, adjoin, `ix_p` = 84
mesh_constructor_step0.h, 43, _step0, already a vertex
mesh_constructor.h, 113, adjoin, `ix_p` = 85
mesh_constructor_step1.h, 48, _step1, Seeking partitions of simplices at entry by the new point... no partition of a simplex at entry found.
mesh_constructor_step2.h, 40, _step2, Seeking vertex set...
strategy/proximity.h, 115, find_vertex_set, `counts.ntried` = 8
strategy/proximity.h, 116, find_vertex_set, `counts.nflat` = 7
strategy/proximity.h, 117, find_vertex_set, `counts.noverlapping` = 0
strategy/proximity.h, 118, find_vertex_set, `counts.nduplicate` = 0
mesh_constructor_step2.h, 50, _step2, found. Created new simplex candidate
mesh_constructor_step3.h, 43, _step3, Seeking partition of the new simplex by the point set at entry... no partition found.
mesh_constructor.h, 144, adjoin, Saving new indivisible simplex.
mesh_constructor.h, 147, adjoin, Done.
mesh_constructor.h, 113, adjoin, `ix_p` = 86
mesh_constructor_step1.h, 48, _step1, Seeking partitions of simplices at entry by the new point... no partition of a simplex at entry found.
mesh_constructor_step2.h, 40, _step2, Seeking vertex set...
strategy/proximity.h, 115, find_vertex_set, `counts.ntried` = 8
strategy/proximity.h, 116, find_vertex_set, `counts.nflat` = 7
strategy/proximity.h, 117, find_vertex_set, `counts.noverlapping` = 0
strategy/proximity.h, 118, find_vertex_set, `counts.nduplicate` = 0
mesh_constructor_step2.h, 50, _step2, found. Created new simplex candidate
mesh_constructor_step3.h, 43, _step3, Seeking partition of the new simplex by the point set at entry... no partition found.
mesh_constructor.h, 144, adjoin, Saving new indivisible simplex.
mesh_constructor.h, 147, adjoin, Done.
mesh_constructor.h, 113, adjoin, `ix_p` = 87
mesh_constructor_step0.h, 43, _step0, already a vertex
mesh_constructor.h, 113, adjoin, `ix_p` = 88
mesh_constructor_step0.h, 43, _step0, already a vertex
mesh_constructor.h, 113, adjoin, `ix_p` = 89
mesh_constructor_step1.h, 48, _step1, Seeking partitions of simplices at entry by the new point... no partition of a simplex at entry found.
mesh_constructor_step2.h, 40, _step2, Seeking vertex set...
strategy/proximity.h, 115, find_vertex_set, `counts.ntried` = 8
strategy/proximity.h, 116, find_vertex_set, `counts.nflat` = 7
strategy/proximity.h, 117, find_vertex_set, `counts.noverlapping` = 0
strategy/proximity.h, 118, find_vertex_set, `counts.nduplicate` = 0
mesh_constructor_step2.h, 50, _step2, found. Created new simplex candidate
mesh_constructor_step3.h, 43, _step3, Seeking partition of the new simplex by the point set at entry... no partition found.
mesh_constructor.h, 144, adjoin, Saving new indivisible simplex.
mesh_constructor.h, 147, adjoin, Done.
mesh_constructor.h, 113, adjoin, `ix_p` = 90
mesh_constructor_step1.h, 48, _step1, Seeking partitions of simplices at entry by the new point... no partition of a simplex at entry found.
mesh_constructor_step2.h, 40, _step2, Seeking vertex set...
strategy/proximity.h, 115, find_vertex_set, `counts.ntried` = 8
strategy/proximity.h, 116, find_vertex_set, `counts.nflat` = 7
strategy/proximity.h, 117, find_vertex_set, `counts.noverlapping` = 0
strategy/proximity.h, 118, find_vertex_set, `counts.nduplicate` = 0
mesh_constructor_step2.h, 50, _step2, found. Created new simplex candidate
mesh_constructor_step3.h, 43, _step3, Seeking partition of the new simplex by the point set at entry... no partition found.
mesh_constructor.h, 144, adjoin, Saving new indivisible simplex.
mesh_constructor.h, 147, adjoin, Done.
mesh_constructor.h, 113, adjoin, `ix_p` = 91
mesh_constructor_step0.h, 43, _step0, already a vertex
mesh_constructor.h, 113, adjoin, `ix_p` = 92
mesh_constructor_step1.h, 48, _step1, Seeking partitions of simplices at entry by the new point... no partition of a simplex at entry found.
mesh_constructor_step2.h, 40, _step2, Seeking vertex set...
strategy/proximity.h, 115, find_vertex_set, `counts.ntried` = 8
strategy/proximity.h, 116, find_vertex_set, `counts.nflat` = 7
strategy/proximity.h, 117, find_vertex_set, `counts.noverlapping` = 0
strategy/proximity.h, 118, find_vertex_set, `counts.nduplicate` = 0
mesh_constructor_step2.h, 50, _step2, found. Created new simplex candidate
mesh_constructor_step3.h, 43, _step3, Seeking partition of the new simplex by the point set at entry... no partition found.
mesh_constructor.h, 144, adjoin, Saving new indivisible simplex.
mesh_constructor.h, 147, adjoin, Done.
mesh_constructor.h, 113, adjoin, `ix_p` = 93
mesh_constructor_step0.h, 43, _step0, already a vertex
mesh_constructor.h, 113, adjoin, `ix_p` = 94
mesh_constructor_step0.h, 43, _step0, already a vertex
mesh_constructor.h, 113, adjoin, `ix_p` = 95
mesh_constructor_step1.h, 48, _step1, Seeking partitions of simplices at entry by the new point... no partition of a simplex at entry found.
mesh_constructor_step2.h, 40, _step2, Seeking vertex set...
strategy/proximity.h, 115, find_vertex_set, `counts.ntried` = 8
strategy/proximity.h, 116, find_vertex_set, `counts.nflat` = 7
strategy/proximity.h, 117, find_vertex_set, `counts.noverlapping` = 0
strategy/proximity.h, 118, find_vertex_set, `counts.nduplicate` = 0
mesh_constructor_step2.h, 50, _step2, found. Created new simplex candidate
mesh_constructor_step3.h, 43, _step3, Seeking partition of the new simplex by the point set at entry... no partition found.
mesh_constructor.h, 144, adjoin, Saving new indivisible simplex.
mesh_constructor.h, 147, adjoin, Done.
mesh_constructor.h, 113, adjoin, `ix_p` = 96
mesh_constructor_step1.h, 48, _step1, Seeking partitions of simplices at entry by the new point... no partition of a simplex at entry found.
mesh_constructor_step2.h, 40, _step2, Seeking vertex set...
strategy/proximity.h, 115, find_vertex_set, `counts.ntried` = 8
strategy/proximity.h, 116, find_vertex_set, `counts.nflat` = 7
strategy/proximity.h, 117, find_vertex_set, `counts.noverlapping` = 0
strategy/proximity.h, 118, find_vertex_set, `counts.nduplicate` = 0
mesh_constructor_step2.h, 50, _step2, found. Created new simplex candidate
mesh_constructor_step3.h, 43, _step3, Seeking partition of the new simplex by the point set at entry... no partition found.
mesh_constructor.h, 144, adjoin, Saving new indivisible simplex.
mesh_constructor.h, 147, adjoin, Done.
mesh_constructor.h, 113, adjoin, `ix_p` = 97
mesh_constructor_step0.h, 43, _step0, already a vertex
mesh_constructor.h, 113, adjoin, `ix_p` = 98
mesh_constructor_step0.h, 43, _step0, already a vertex
mesh_constructor.h, 113, adjoin, `ix_p` = 99
mesh_constructor_step1.h, 48, _step1, Seeking partitions of simplices at entry by the new point... no partition of a simplex at entry found.
mesh_constructor_step2.h, 40, _step2, Seeking vertex set...
strategy/proximity.h, 115, find_vertex_set, `counts.ntried` = 8
strategy/proximity.h, 116, find_vertex_set, `counts.nflat` = 7
strategy/proximity.h, 117, find_vertex_set, `counts.noverlapping` = 0
strategy/proximity.h, 118, find_vertex_set, `counts.nduplicate` = 0
mesh_constructor_step2.h, 50, _step2, found. Created new simplex candidate
mesh_constructor_step3.h, 43, _step3, Seeking partition of the new simplex by the point set at entry... no partition found.
mesh_constructor.h, 144, adjoin, Saving new indivisible simplex.
mesh_constructor.h, 147, adjoin, Done.
mesh_constructor.h, 113, adjoin, `ix_p` = 100
mesh_constructor_step0.h, 43, _step0, already a vertex
mesh_constructor.h, 113, adjoin, `ix_p` = 101
mesh_constructor_step1.h, 48, _step1, Seeking partitions of simplices at entry by the new point... no partition of a simplex at entry found.
mesh_constructor_step2.h, 40, _step2, Seeking vertex set...
strategy/proximity.h, 115, find_vertex_set, `counts.ntried` = 8
strategy/proximity.h, 116, find_vertex_set, `counts.nflat` = 7
strategy/proximity.h, 117, find_vertex_set, `counts.noverlapping` = 0
strategy/proximity.h, 118, find_vertex_set, `counts.nduplicate` = 0
mesh_constructor_step2.h, 50, _step2, found. Created new simplex candidate
mesh_constructor_step3.h, 43, _step3, Seeking partition of the new simplex by the point set at entry... no partition found.
mesh_constructor.h, 144, adjoin, Saving new indivisible simplex.
mesh_constructor.h, 147, adjoin, Done.
mesh_constructor.h, 113, adjoin, `ix_p` = 102
mesh_constructor_step1.h, 48, _step1, Seeking partitions of simplices at entry by the new point... no partition of a simplex at entry found.
mesh_constructor_step2.h, 40, _step2, Seeking vertex set...
strategy/proximity.h, 115, find_vertex_set, `counts.ntried` = 8
strategy/proximity.h, 116, find_vertex_set, `counts.nflat` = 7
strategy/proximity.h, 117, find_vertex_set, `counts.noverlapping` = 0
strategy/proximity.h, 118, find_vertex_set, `counts.nduplicate` = 0
mesh_constructor_step2.h, 50, _step2, found. Created new simplex candidate
mesh_constructor_step3.h, 43, _step3, Seeking partition of the new simplex by the point set at entry... no partition found.
mesh_constructor.h, 144, adjoin, Saving new indivisible simplex.
mesh_constructor.h, 147, adjoin, Done.
mesh_constructor.h, 113, adjoin, `ix_p` = 103
mesh_constructor_step0.h, 43, _step0, already a vertex
mesh_constructor.h, 113, adjoin, `ix_p` = 104
mesh_constructor_step0.h, 43, _step0, already a vertex
mesh_constructor.h, 113, adjoin, `ix_p` = 105
mesh_constructor_step1.h, 48, _step1, Seeking partitions of simplices at entry by the new point... no partition of a simplex at entry found.
mesh_constructor_step2.h, 40, _step2, Seeking vertex set...
strategy/proximity.h, 115, find_vertex_set, `counts.ntried` = 8
strategy/proximity.h, 116, find_vertex_set, `counts.nflat` = 7
strategy/proximity.h, 117, find_vertex_set, `counts.noverlapping` = 0
strategy/proximity.h, 118, find_vertex_set, `counts.nduplicate` = 0
mesh_constructor_step2.h, 50, _step2, found. Created new simplex candidate
mesh_constructor_step3.h, 43, _step3, Seeking partition of the new simplex by the point set at entry... no partition found.
mesh_constructor.h, 144, adjoin, Saving new indivisible simplex.
mesh_constructor.h, 147, adjoin, Done.
mesh_constructor.h, 113, adjoin, `ix_p` = 106
mesh_constructor_step1.h, 48, _step1, Seeking partitions of simplices at entry by the new point... no partition of a simplex at entry found.
mesh_constructor_step2.h, 40, _step2, Seeking vertex set...
strategy/proximity.h, 115, find_vertex_set, `counts.ntried` = 8
strategy/proximity.h, 116, find_vertex_set, `counts.nflat` = 7
strategy/proximity.h, 117, find_vertex_set, `counts.noverlapping` = 0
strategy/proximity.h, 118, find_vertex_set, `counts.nduplicate` = 0
mesh_constructor_step2.h, 50, _step2, found. Created new simplex candidate
mesh_constructor_step3.h, 43, _step3, Seeking partition of the new simplex by the point set at entry... no partition found.
mesh_constructor.h, 144, adjoin, Saving new indivisible simplex.
mesh_constructor.h, 147, adjoin, Done.
mesh_constructor.h, 113, adjoin, `ix_p` = 107
mesh_constructor_step0.h, 43, _step0, already a vertex
mesh_constructor.h, 113, adjoin, `ix_p` = 108
mesh_constructor_step1.h, 48, _step1, Seeking partitions of simplices at entry by the new point... no partition of a simplex at entry found.
mesh_constructor_step2.h, 40, _step2, Seeking vertex set...
strategy/proximity.h, 115, find_vertex_set, `counts.ntried` = 8
strategy/proximity.h, 116, find_vertex_set, `counts.nflat` = 7
strategy/proximity.h, 117, find_vertex_set, `counts.noverlapping` = 0
strategy/proximity.h, 118, find_vertex_set, `counts.nduplicate` = 0
mesh_constructor_step2.h, 50, _step2, found. Created new simplex candidate
mesh_constructor_step3.h, 43, _step3, Seeking partition of the new simplex by the point set at entry... no partition found.
mesh_constructor.h, 144, adjoin, Saving new indivisible simplex.
mesh_constructor.h, 147, adjoin, Done.
mesh_constructor.h, 113, adjoin, `ix_p` = 109
mesh_constructor_step0.h, 43, _step0, already a vertex
mesh_constructor.h, 113, adjoin, `ix_p` = 110
mesh_constructor_step0.h, 43, _step0, already a vertex
mesh_constructor.h, 113, adjoin, `ix_p` = 111
mesh_constructor_step1.h, 48, _step1, Seeking partitions of simplices at entry by the new point... no partition of a simplex at entry found.
mesh_constructor_step2.h, 40, _step2, Seeking vertex set...
strategy/proximity.h, 115, find_vertex_set, `counts.ntried` = 8
strategy/proximity.h, 116, find_vertex_set, `counts.nflat` = 7
strategy/proximity.h, 117, find_vertex_set, `counts.noverlapping` = 0
strategy/proximity.h, 118, find_vertex_set, `counts.nduplicate` = 0
mesh_constructor_step2.h, 50, _step2, found. Created new simplex candidate
mesh_constructor_step3.h, 43, _step3, Seeking partition of the new simplex by the point set at entry... no partition found.
mesh_constructor.h, 144, adjoin, Saving new indivisible simplex.
mesh_constructor.h, 147, adjoin, Done.
mesh_constructor.h, 113, adjoin, `ix_p` = 112
mesh_constructor_step0.h, 43, _step0, already a vertex
mesh_constructor.h, 113, adjoin, `ix_p` = 113
mesh_constructor_step1.h, 48, _step1, Seeking partitions of simplices at entry by the new point... no partition of a simplex at entry found.
mesh_constructor_step2.h, 40, _step2, Seeking vertex set...
strategy/proximity.h, 115, find_vertex_set, `counts.ntried` = 8
strategy/proximity.h, 116, find_vertex_set, `counts.nflat` = 7
strategy/proximity.h, 117, find_vertex_set, `counts.noverlapping` = 0
strategy/proximity.h, 118, find_vertex_set, `counts.nduplicate` = 0
mesh_constructor_step2.h, 50, _step2, found. Created new simplex candidate
mesh_constructor_step3.h, 43, _step3, Seeking partition of the new simplex by the point set at entry... no partition found.
mesh_constructor.h, 144, adjoin, Saving new indivisible simplex.
mesh_constructor.h, 147, adjoin, Done.
mesh_constructor.h, 113, adjoin, `ix_p` = 114
mesh_constructor_step1.h, 48, _step1, Seeking partitions of simplices at entry by the new point... no partition of a simplex at entry found.
mesh_constructor_step2.h, 40, _step2, Seeking vertex set...
strategy/proximity.h, 115, find_vertex_set, `counts.ntried` = 8
strategy/proximity.h, 116, find_vertex_set, `counts.nflat` = 7
strategy/proximity.h, 117, find_vertex_set, `counts.noverlapping` = 0
strategy/proximity.h, 118, find_vertex_set, `counts.nduplicate` = 0
mesh_constructor_step2.h, 50, _step2, found. Created new simplex candidate
mesh_constructor_step3.h, 43, _step3, Seeking partition of the new simplex by the point set at entry... no partition found.
mesh_constructor.h, 144, adjoin, Saving new indivisible simplex.
mesh_constructor.h, 147, adjoin, Done.
mesh_constructor.h, 113, adjoin, `ix_p` = 115
mesh_constructor_step0.h, 43, _step0, already a vertex
mesh_constructor.h, 113, adjoin, `ix_p` = 116
mesh_constructor_step1.h, 48, _step1, Seeking partitions of simplices at entry by the new point... no partition of a simplex at entry found.
mesh_constructor_step2.h, 40, _step2, Seeking vertex set...
strategy/proximity.h, 115, find_vertex_set, `counts.ntried` = 8
strategy/proximity.h, 116, find_vertex_set, `counts.nflat` = 7
strategy/proximity.h, 117, find_vertex_set, `counts.noverlapping` = 0
strategy/proximity.h, 118, find_vertex_set, `counts.nduplicate` = 0
mesh_constructor_step2.h, 50, _step2, found. Created new simplex candidate
mesh_constructor_step3.h, 43, _step3, Seeking partition of the new simplex by the point set at entry... no partition found.
mesh_constructor.h, 144, adjoin, Saving new indivisible simplex.
mesh_constructor.h, 147, adjoin, Done.
mesh_constructor.h, 113, adjoin, `ix_p` = 117
mesh_constructor_step0.h, 43, _step0, already a vertex
mesh_constructor.h, 113, adjoin, `ix_p` = 118
mesh_constructor_step0.h, 43, _step0, already a vertex
mesh_constructor.h, 113, adjoin, `ix_p` = 119
mesh_constructor_step1.h, 48, _step1, Seeking partitions of simplices at entry by the new point... no partition of a simplex at entry found.
mesh_constructor_step2.h, 40, _step2, Seeking vertex set...
strategy/proximity.h, 115, find_vertex_set, `counts.ntried` = 8
strategy/proximity.h, 116, find_vertex_set, `counts.nflat` = 7
strategy/proximity.h, 117, find_vertex_set, `counts.noverlapping` = 0
strategy/proximity.h, 118, find_vertex_set, `counts.nduplicate` = 0
mesh_constructor_step2.h, 50, _step2, found. Created new simplex candidate
mesh_constructor_step3.h, 43, _step3, Seeking partition of the new simplex by the point set at entry... no partition found.
mesh_constructor.h, 144, adjoin, Saving new indivisible simplex.
mesh_constructor.h, 147, adjoin, Done.
mesh_constructor.h, 113, adjoin, `ix_p` = 120
mesh_constructor_step1.h, 48, _step1, Seeking partitions of simplices at entry by the new point... no partition of a simplex at entry found.
mesh_constructor_step2.h, 40, _step2, Seeking vertex set...
strategy/proximity.h, 115, find_vertex_set, `counts.ntried` = 8
strategy/proximity.h, 116, find_vertex_set, `counts.nflat` = 7
strategy/proximity.h, 117, find_vertex_set, `counts.noverlapping` = 0
strategy/proximity.h, 118, find_vertex_set, `counts.nduplicate` = 0
mesh_constructor_step2.h, 50, _step2, found. Created new simplex candidate
mesh_constructor_step3.h, 43, _step3, Seeking partition of the new simplex by the point set at entry... no partition found.
mesh_constructor.h, 144, adjoin, Saving new indivisible simplex.
mesh_constructor.h, 147, adjoin, Done.
mesh_constructor.h, 113, adjoin, `ix_p` = 121
mesh_constructor_step0.h, 43, _step0, already a vertex
mesh_constructor.h, 113, adjoin, `ix_p` = 122
mesh_constructor_step0.h, 43, _step0, already a vertex
mesh_constructor.h, 113, adjoin, `ix_p` = 123
mesh_constructor_step1.h, 48, _step1, Seeking partitions of simplices at entry by the new point... no partition of a simplex at entry found.
mesh_constructor_step2.h, 40, _step2, Seeking vertex set...
strategy/proximity.h, 115, find_vertex_set, `counts.ntried` = 8
strategy/proximity.h, 116, find_vertex_set, `counts.nflat` = 7
strategy/proximity.h, 117, find_vertex_set, `counts.noverlapping` = 0
strategy/proximity.h, 118, find_vertex_set, `counts.nduplicate` = 0
mesh_constructor_step2.h, 50, _step2, found. Created new simplex candidate
mesh_constructor_step3.h, 43, _step3, Seeking partition of the new simplex by the point set at entry... no partition found.
mesh_constructor.h, 144, adjoin, Saving new indivisible simplex.
mesh_constructor.h, 147, adjoin, Done.
mesh_constructor.h, 113, adjoin, `ix_p` = 124
mesh_constructor_step0.h, 43, _step0, already a vertex
mesh_constructor.h, 113, adjoin, `ix_p` = 125
mesh_constructor_step1.h, 48, _step1, Seeking partitions of simplices at entry by the new point... no partition of a simplex at entry found.
mesh_constructor_step2.h, 40, _step2, Seeking vertex set...
strategy/proximity.h, 115, find_vertex_set, `counts.ntried` = 8
strategy/proximity.h, 116, find_vertex_set, `counts.nflat` = 7
strategy/proximity.h, 117, find_vertex_set, `counts.noverlapping` = 0
strategy/proximity.h, 118, find_vertex_set, `counts.nduplicate` = 0
mesh_constructor_step2.h, 50, _step2, found. Created new simplex candidate
mesh_constructor_step3.h, 43, _step3, Seeking partition of the new simplex by the point set at entry... no partition found.
mesh_constructor.h, 144, adjoin, Saving new indivisible simplex.
mesh_constructor.h, 147, adjoin, Done.
mesh_constructor.h, 113, adjoin, `ix_p` = 126
mesh_constructor_step1.h, 48, _step1, Seeking partitions of simplices at entry by the new point... no partition of a simplex at entry found.
mesh_constructor_step2.h, 40, _step2, Seeking vertex set...
strategy/proximity.h, 115, find_vertex_set, `counts.ntried` = 8
strategy/proximity.h, 116, find_vertex_set, `counts.nflat` = 7
strategy/proximity.h, 117, find_vertex_set, `counts.noverlapping` = 0
strategy/proximity.h, 118, find_vertex_set, `counts.nduplicate` = 0
mesh_constructor_step2.h, 50, _step2, found. Created new simplex candidate
mesh_constructor_step3.h, 43, _step3, Seeking partition of the new simplex by the point set at entry... no partition found.
mesh_constructor.h, 144, adjoin, Saving new indivisible simplex.
mesh_constructor.h, 147, adjoin, Done.
mesh_constructor.h, 113, adjoin, `ix_p` = 127
mesh_constructor_step0.h, 43, _step0, already a vertex
mesh_constructor.h, 89, construct, Relinking... ...Done.
mesh_test.h, 118, write_mesh, `m.simplices[i]` =
[0] matrix (45 x 8)=
      0             32            1             4             8             64            16            2
    0.000000,     0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000
    0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000
    0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000

 neighbor simplex index =

mesh_test.h, 118, write_mesh, `m.simplices[i]` =
[1] matrix (45 x 8)=
      3             35            7             1             11            67            19            2
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000
    1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000
    0.000000,     0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000
    0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000

 neighbor simplex index =

mesh_test.h, 118, write_mesh, `m.simplices[i]` =
[2] matrix (45 x 8)=
      5             37            7             4             1             69            21            13
    1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000
    0.000000,     0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000
    0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000

 neighbor simplex index =

mesh_test.h, 118, write_mesh, `m.simplices[i]` =
[3] matrix (45 x 8)=
      6             38            7             4             22            70            14            2
    0.000000,     0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000,     0.000000
    0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000

 neighbor simplex index =

mesh_test.h, 118, write_mesh, `m.simplices[i]` =
[4] matrix (45 x 8)=
      9             41            25            1             11            73            13            8
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000
    1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000
    0.000000,     0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000

 neighbor simplex index =

mesh_test.h, 118, write_mesh, `m.simplices[i]` =
[5] matrix (45 x 8)=
      10            42            26            8             2             74            14            11
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000
    1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000
    1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000
    0.000000,     0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000

 neighbor simplex index =

mesh_test.h, 118, write_mesh, `m.simplices[i]` =
[6] matrix (45 x 8)=
      12            44            14            4             28            76            13            8
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000
    0.000000,     0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000
    1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000
    0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000,     0.000000
    0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000

 neighbor simplex index =

mesh_test.h, 118, write_mesh, `m.simplices[i]` =
[7] matrix (45 x 8)=
      15            47            7             11            31            79            14            13
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000
    1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000
    1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000
    0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000,     0.000000
    0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000

 neighbor simplex index =

mesh_test.h, 118, write_mesh, `m.simplices[i]` =
[8] matrix (45 x 8)=
      17            49            16            1             21            81            25            19
    1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000
    0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000
    1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000
    0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000

 neighbor simplex index =

mesh_test.h, 118, write_mesh, `m.simplices[i]` =
[9] matrix (45 x 8)=
      18            50            16            22            26            82            19            2
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000
    1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000
    0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000
    0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000

 neighbor simplex index =

mesh_test.h, 118, write_mesh, `m.simplices[i]` =
[10] matrix (45 x 8)=
      20            52            16            4             28            84            22            21
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000
    1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000
    0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000
    0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000

 neighbor simplex index =

mesh_test.h, 118, write_mesh, `m.simplices[i]` =
[11] matrix (45 x 8)=
      23            31            7             55            21            87            22            19
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000
    1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000
    0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000
    0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000

 neighbor simplex index =

mesh_test.h, 118, write_mesh, `m.simplices[i]` =
[12] matrix (45 x 8)=
      24            56            16            26            28            88            25            8
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000
    0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000,     0.000000
    1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000
    0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000

 neighbor simplex index =

mesh_test.h, 118, write_mesh, `m.simplices[i]` =
[13] matrix (45 x 8)=
      27            59            31            26            11            91            25            19
    1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000
    0.000000,     0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000
    1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000
    0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000

 neighbor simplex index =

mesh_test.h, 118, write_mesh, `m.simplices[i]` =
[14] matrix (45 x 8)=
      29            61            31            13            25            93            28            21
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000
    0.000000,     0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000
    1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000
    0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000

 neighbor simplex index =

mesh_test.h, 118, write_mesh, `m.simplices[i]` =
[15] matrix (45 x 8)=
      30            62            31            28            22            94            26            14
    0.000000,     0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000
    1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000
    0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000

 neighbor simplex index =

mesh_test.h, 118, write_mesh, `m.simplices[i]` =
[16] matrix (45 x 8)=
      33            49            32            1             41            97            37            35
    1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000,     0.000000
    0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000

 neighbor simplex index =

mesh_test.h, 118, write_mesh, `m.simplices[i]` =
[17] matrix (45 x 8)=
      34            50            38            32            42            98            35            2
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000
    1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000
    0.000000,     0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000,     0.000000
    0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000

 neighbor simplex index =

mesh_test.h, 118, write_mesh, `m.simplices[i]` =
[18] matrix (45 x 8)=
      36            52            32            4             44            100           38            37
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000
    1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000
    0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000,     0.000000
    0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000

 neighbor simplex index =

mesh_test.h, 118, write_mesh, `m.simplices[i]` =
[19] matrix (45 x 8)=
      39            47            7             55            37            103           38            35
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000
    1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000
    0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000
    1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000

 neighbor simplex index =

mesh_test.h, 118, write_mesh, `m.simplices[i]` =
[20] matrix (45 x 8)=
      40            56            42            32            44            104           41            8
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000
    0.000000,     0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000
    0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000

 neighbor simplex index =

mesh_test.h, 118, write_mesh, `m.simplices[i]` =
[21] matrix (45 x 8)=
      43            59            47            42            11            107           41            35
    1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000
    0.000000,     0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000
    0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000

 neighbor simplex index =

mesh_test.h, 118, write_mesh, `m.simplices[i]` =
[22] matrix (45 x 8)=
      45            61            47            13            41            109           44            37
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000
    0.000000,     0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000
    0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000

 neighbor simplex index =

mesh_test.h, 118, write_mesh, `m.simplices[i]` =
[23] matrix (45 x 8)=
      46            62            47            44            38            110           42            14
    0.000000,     0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000
    1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000
    0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000

 neighbor simplex index =

mesh_test.h, 118, write_mesh, `m.simplices[i]` =
[24] matrix (45 x 8)=
      48            56            50            32            52            112           49            16
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000
    0.000000,     0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000,     0.000000
    0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000

 neighbor simplex index =

mesh_test.h, 118, write_mesh, `m.simplices[i]` =
[25] matrix (45 x 8)=
      51            59            55            50            19            115           49            35
    1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000
    0.000000,     0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000
    1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000

 neighbor simplex index =

mesh_test.h, 118, write_mesh, `m.simplices[i]` =
[26] matrix (45 x 8)=
      53            61            55            52            37            117           49            21
    1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000
    0.000000,     0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000
    0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000

 neighbor simplex index =

mesh_test.h, 118, write_mesh, `m.simplices[i]` =
[27] matrix (45 x 8)=
      54            62            55            52            38            118           50            22
    0.000000,     0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000
    0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000

 neighbor simplex index =

mesh_test.h, 118, write_mesh, `m.simplices[i]` =
[28] matrix (45 x 8)=
      57            61            59            56            25            121           49            41
    1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000
    0.000000,     0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000
    1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000

 neighbor simplex index =

mesh_test.h, 118, write_mesh, `m.simplices[i]` =
[29] matrix (45 x 8)=
      58            62            59            56            26            122           50            42
    0.000000,     0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000
    0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000
    1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000

 neighbor simplex index =

mesh_test.h, 118, write_mesh, `m.simplices[i]` =
[30] matrix (45 x 8)=
      60            62            61            56            44            124           52            28
    0.000000,     0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000
    1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000

 neighbor simplex index =

mesh_test.h, 118, write_mesh, `m.simplices[i]` =
[31] matrix (45 x 8)=
      63            31            61            62            55            127           59            47
    1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000
    1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000
    1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000
    1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000

 neighbor simplex index =

mesh_test.h, 118, write_mesh, `m.simplices[i]` =
[32] matrix (45 x 8)=
      65            81            69            1             73            97            67            64
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000
    0.000000,     0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000,     0.000000
    0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000

 neighbor simplex index =

mesh_test.h, 118, write_mesh, `m.simplices[i]` =
[33] matrix (45 x 8)=
      66            82            70            67            74            98            2             64
    0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000
    0.000000,     0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000,     0.000000
    0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000

 neighbor simplex index =

mesh_test.h, 118, write_mesh, `m.simplices[i]` =
[34] matrix (45 x 8)=
      68            84            70            4             76            100           69            64
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000
    0.000000,     0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000,     0.000000
    0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000

 neighbor simplex index =

mesh_test.h, 118, write_mesh, `m.simplices[i]` =
[35] matrix (45 x 8)=
      71            79            7             87            69            103           70            67
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000
    1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000
    0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000
    1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000

 neighbor simplex index =

mesh_test.h, 118, write_mesh, `m.simplices[i]` =
[36] matrix (45 x 8)=
      72            88            74            73            76            104           8             64
    0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000
    0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000

 neighbor simplex index =

mesh_test.h, 118, write_mesh, `m.simplices[i]` =
[37] matrix (45 x 8)=
      75            91            79            74            11            107           73            67
    1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000
    0.000000,     0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000
    0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000

 neighbor simplex index =

mesh_test.h, 118, write_mesh, `m.simplices[i]` =
[38] matrix (45 x 8)=
      77            93            79            13            73            109           76            69
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000
    0.000000,     0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000
    0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000

 neighbor simplex index =

mesh_test.h, 118, write_mesh, `m.simplices[i]` =
[39] matrix (45 x 8)=
      78            94            79            76            70            110           74            14
    0.000000,     0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000
    1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000
    0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000

 neighbor simplex index =

mesh_test.h, 118, write_mesh, `m.simplices[i]` =
[40] matrix (45 x 8)=
      80            88            82            81            84            112           64            16
    0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000,     0.000000
    0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000

 neighbor simplex index =

mesh_test.h, 118, write_mesh, `m.simplices[i]` =
[41] matrix (45 x 8)=
      83            91            87            82            19            115           81            67
    1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000
    0.000000,     0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000

 neighbor simplex index =

mesh_test.h, 118, write_mesh, `m.simplices[i]` =
[42] matrix (45 x 8)=
      85            93            87            84            69            117           81            21
    1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000
    0.000000,     0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000
    0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000

 neighbor simplex index =

mesh_test.h, 118, write_mesh, `m.simplices[i]` =
[43] matrix (45 x 8)=
      86            94            87            84            70            118           82            22
    0.000000,     0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000
    0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000

 neighbor simplex index =

mesh_test.h, 118, write_mesh, `m.simplices[i]` =
[44] matrix (45 x 8)=
      89            93            91            88            25            121           81            73
    1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000
    0.000000,     0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000

 neighbor simplex index =

mesh_test.h, 118, write_mesh, `m.simplices[i]` =
[45] matrix (45 x 8)=
      90            94            91            88            26            122           82            74
    0.000000,     0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000
    0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000

 neighbor simplex index =

mesh_test.h, 118, write_mesh, `m.simplices[i]` =
[46] matrix (45 x 8)=
      92            94            93            88            76            124           84            28
    0.000000,     0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000
    1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000

 neighbor simplex index =

mesh_test.h, 118, write_mesh, `m.simplices[i]` =
[47] matrix (45 x 8)=
      95            31            93            94            87            127           91            79
    1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000
    1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000
    1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000
    1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000

 neighbor simplex index =

mesh_test.h, 118, write_mesh, `m.simplices[i]` =
[48] matrix (45 x 8)=
      96            104           98            32            100           112           97            64
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000
    0.000000,     0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000,     0.000000
    0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000
    1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000

 neighbor simplex index =

mesh_test.h, 118, write_mesh, `m.simplices[i]` =
[49] matrix (45 x 8)=
      99            107           103           98            67            115           97            35
    1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000
    0.000000,     0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000

 neighbor simplex index =

mesh_test.h, 118, write_mesh, `m.simplices[i]` =
[50] matrix (45 x 8)=
      101           109           103           37            97            117           100           69
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000
    0.000000,     0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000
    0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000
    1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000

 neighbor simplex index =

mesh_test.h, 118, write_mesh, `m.simplices[i]` =
[51] matrix (45 x 8)=
      102           110           103           38            98            118           100           70
    0.000000,     0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000
    1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000
    0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000
    1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000

 neighbor simplex index =

mesh_test.h, 118, write_mesh, `m.simplices[i]` =
[52] matrix (45 x 8)=
      105           109           107           104           73            121           97            41
    1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000
    0.000000,     0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000

 neighbor simplex index =

mesh_test.h, 118, write_mesh, `m.simplices[i]` =
[53] matrix (45 x 8)=
      106           110           107           104           74            122           98            42
    0.000000,     0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000
    0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000

 neighbor simplex index =

mesh_test.h, 118, write_mesh, `m.simplices[i]` =
[54] matrix (45 x 8)=
      108           110           109           44            100           124           104           76
    0.000000,     0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000
    1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000
    1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000

 neighbor simplex index =

mesh_test.h, 118, write_mesh, `m.simplices[i]` =
[55] matrix (45 x 8)=
      111           47            109           110           103           127           107           79
    1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000
    1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000
    1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000
    1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000

 neighbor simplex index =

mesh_test.h, 118, write_mesh, `m.simplices[i]` =
[56] matrix (45 x 8)=
      113           117           115           112           81            121           97            49
    1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000
    0.000000,     0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000
    1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000

 neighbor simplex index =

mesh_test.h, 118, write_mesh, `m.simplices[i]` =
[57] matrix (45 x 8)=
      114           118           115           50            98            122           112           82
    0.000000,     0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000
    0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000
    1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000

 neighbor simplex index =

mesh_test.h, 118, write_mesh, `m.simplices[i]` =
[58] matrix (45 x 8)=
      116           118           117           52            100           124           112           84
    0.000000,     0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000
    1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000

 neighbor simplex index =

mesh_test.h, 118, write_mesh, `m.simplices[i]` =
[59] matrix (45 x 8)=
      119           55            117           118           103           127           115           87
    1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000
    1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000
    1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000

 neighbor simplex index =

mesh_test.h, 118, write_mesh, `m.simplices[i]` =
[60] matrix (45 x 8)=
      120           122           121           56            104           124           112           88
    0.000000,     0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     1.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000
    1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000
    1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000

 neighbor simplex index =

mesh_test.h, 118, write_mesh, `m.simplices[i]` =
[61] matrix (45 x 8)=
      123           59            121           122           107           127           115           91
    1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000
    1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000
    1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000
    1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000

 neighbor simplex index =

mesh_test.h, 118, write_mesh, `m.simplices[i]` =
[62] matrix (45 x 8)=
      125           61            121           124           109           127           117           93
    1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000
    1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000
    1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000
    1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000

 neighbor simplex index =

mesh_test.h, 118, write_mesh, `m.simplices[i]` =
[63] matrix (45 x 8)=
      126           62            122           124           110           127           118           94
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     1.000000,     0.000000,     0.000000
    1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000
    1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000
    1.000000,     1.000000,     1.000000,     1.000000,     0.000000,     1.000000,     1.000000,     1.000000
    1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     0.000000
    1.000000,     0.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000,     1.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000
    0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000,     0.000000

 neighbor simplex index =

mesh_test.h, 111, write_neighbors, `map{m.neighbors}` =
<0, 1> : 2
<0, 2> : 2
<0, 3> : 2
<0, 4> : 2
<0, 5> : 2
<0, 6> : 2
<0, 8> : 2
<0, 9> : 2
<0, 10> : 2
<0, 12> : 2
<0, 16> : 2
<0, 17> : 2
<0, 18> : 2
<0, 20> : 2
<0, 24> : 2
<0, 32> : 2
<0, 33> : 2
<0, 34> : 2
<0, 36> : 2
<0, 40> : 2
<0, 48> : 2
<1, 2> : 2
<1, 3> : 2
<1, 4> : 2
<1, 5> : 2
<1, 7> : 2
<1, 8> : 2
<1, 9> : 2
<1, 11> : 2
<1, 13> : 2
<1, 16> : 2
<1, 17> : 2
<1, 19> : 2
<1, 21> : 2
<1, 25> : 2
<1, 32> : 2
<1, 33> : 2
<1, 35> : 2
<1, 37> : 2
<1, 41> : 2
<1, 49> : 2
<2, 3> : 2
<2, 4> : 2
<2, 6> : 2
<2, 7> : 2
<2, 8> : 2
<2, 10> : 2
<2, 11> : 2
<2, 14> : 2
<2, 16> : 2
<2, 18> : 2
<2, 19> : 2
<2, 22> : 2
<2, 26> : 2
<2, 32> : 2
<2, 34> : 2
<2, 35> : 2
<2, 38> : 2
<2, 42> : 2
<2, 50> : 2
<3, 5> : 2
<3, 6> : 2
<3, 7> : 2
<3, 9> : 2
<3, 10> : 2
<3, 11> : 2
<3, 15> : 2
<3, 17> : 2
<3, 18> : 2
<3, 19> : 2
<3, 23> : 2
<3, 27> : 2
<3, 33> : 2
<3, 34> : 2
<3, 35> : 2
<3, 39> : 2
<3, 43> : 2
<3, 51> : 2
<4, 5> : 2
<4, 6> : 2
<4, 7> : 2
<4, 8> : 2
<4, 12> : 2
<4, 13> : 2
<4, 14> : 2
<4, 16> : 2
<4, 20> : 2
<4, 21> : 2
<4, 22> : 2
<4, 28> : 2
<4, 32> : 2
<4, 36> : 2
<4, 37> : 2
<4, 38> : 2
<4, 44> : 2
<4, 52> : 2
<5, 6> : 2
<5, 7> : 2
<5, 9> : 2
<5, 12> : 2
<5, 13> : 2
<5, 15> : 2
<5, 17> : 2
<5, 20> : 2
<5, 21> : 2
<5, 23> : 2
<5, 29> : 2
<5, 33> : 2
<5, 36> : 2
<5, 37> : 2
<5, 39> : 2
<5, 45> : 2
<5, 53> : 2
<6, 7> : 2
<6, 10> : 2
<6, 12> : 2
<6, 14> : 2
<6, 15> : 2
<6, 18> : 2
<6, 20> : 2
<6, 22> : 2
<6, 23> : 2
<6, 30> : 2
<6, 34> : 2
<6, 36> : 2
<6, 38> : 2
<6, 39> : 2
<6, 46> : 2
<6, 54> : 2
<7, 11> : 2
<7, 13> : 2
<7, 14> : 2
<7, 15> : 2
<7, 19> : 2
<7, 21> : 2
<7, 22> : 2
<7, 23> : 2
<7, 31> : 2
<7, 35> : 2
<7, 37> : 2
<7, 38> : 2
<7, 39> : 2
<7, 47> : 2
<7, 55> : 2
<8, 9> : 2
<8, 10> : 2
<8, 11> : 2
<8, 12> : 2
<8, 13> : 2
<8, 14> : 2
<8, 16> : 2
<8, 24> : 2
<8, 25> : 2
<8, 26> : 2
<8, 28> : 2
<8, 32> : 2
<8, 40> : 2
<8, 41> : 2
<8, 42> : 2
<8, 44> : 2
<8, 56> : 2
<9, 10> : 2
<9, 11> : 2
<9, 12> : 2
<9, 13> : 2
<9, 15> : 2
<9, 17> : 2
<9, 24> : 2
<9, 25> : 2
<9, 27> : 2
<9, 29> : 2
<9, 33> : 2
<9, 40> : 2
<9, 41> : 2
<9, 43> : 2
<9, 45> : 2
<9, 57> : 2
<10, 11> : 2
<10, 12> : 2
<10, 14> : 2
<10, 15> : 2
<10, 18> : 2
<10, 24> : 2
<10, 26> : 2
<10, 27> : 2
<10, 30> : 2
<10, 34> : 2
<10, 40> : 2
<10, 42> : 2
<10, 43> : 2
<10, 46> : 2
<10, 58> : 2
<11, 13> : 2
<11, 14> : 2
<11, 15> : 2
<11, 19> : 2
<11, 25> : 2
<11, 26> : 2
<11, 27> : 2
<11, 31> : 2
<11, 35> : 2
<11, 41> : 2
<11, 42> : 2
<11, 43> : 2
<11, 47> : 2
<11, 59> : 2
<12, 13> : 2
<12, 14> : 2
<12, 15> : 2
<12, 20> : 2
<12, 24> : 2
<12, 28> : 2
<12, 29> : 2
<12, 30> : 2
<12, 36> : 2
<12, 40> : 2
<12, 44> : 2
<12, 45> : 2
<12, 46> : 2
<12, 60> : 2
<13, 14> : 2
<13, 15> : 2
<13, 21> : 2
<13, 25> : 2
<13, 28> : 2
<13, 29> : 2
<13, 31> : 2
<13, 37> : 2
<13, 41> : 2
<13, 44> : 2
<13, 45> : 2
<13, 47> : 2
<13, 61> : 2
<14, 15> : 2
<14, 22> : 2
<14, 26> : 2
<14, 28> : 2
<14, 30> : 2
<14, 31> : 2
<14, 38> : 2
<14, 42> : 2
<14, 44> : 2
<14, 46> : 2
<14, 47> : 2
<14, 62> : 2
<15, 23> : 2
<15, 27> : 2
<15, 29> : 2
<15, 30> : 2
<15, 31> : 2
<15, 39> : 2
<15, 43> : 2
<15, 45> : 2
<15, 46> : 2
<15, 47> : 2
<15, 63> : 2
<16, 17> : 2
<16, 18> : 2
<16, 19> : 2
<16, 20> : 2
<16, 21> : 2
<16, 22> : 2
<16, 24> : 2
<16, 25> : 2
<16, 26> : 2
<16, 28> : 2
<16, 32> : 2
<16, 48> : 2
<16, 49> : 2
<16, 50> : 2
<16, 52> : 2
<16, 56> : 2
<17, 18> : 2
<17, 19> : 2
<17, 20> : 2
<17, 21> : 2
<17, 23> : 2
<17, 24> : 2
<17, 25> : 2
<17, 27> : 2
<17, 29> : 2
<17, 33> : 2
<17, 48> : 2
<17, 49> : 2
<17, 51> : 2
<17, 53> : 2
<17, 57> : 2
<18, 19> : 2
<18, 20> : 2
<18, 22> : 2
<18, 23> : 2
<18, 24> : 2
<18, 26> : 2
<18, 27> : 2
<18, 30> : 2
<18, 34> : 2
<18, 48> : 2
<18, 50> : 2
<18, 51> : 2
<18, 54> : 2
<18, 58> : 2
<19, 21> : 2
<19, 22> : 2
<19, 23> : 2
<19, 25> : 2
<19, 26> : 2
<19, 27> : 2
<19, 31> : 2
<19, 35> : 2
<19, 49> : 2
<19, 50> : 2
<19, 51> : 2
<19, 55> : 2
<19, 59> : 2
<20, 21> : 2
<20, 22> : 2
<20, 23> : 2
<20, 24> : 2
<20, 28> : 2
<20, 29> : 2
<20, 30> : 2
<20, 36> : 2
<20, 48> : 2
<20, 52> : 2
<20, 53> : 2
<20, 54> : 2
<20, 60> : 2
<21, 22> : 2
<21, 23> : 2
<21, 25> : 2
<21, 28> : 2
<21, 29> : 2
<21, 31> : 2
<21, 37> : 2
<21, 49> : 2
<21, 52> : 2
<21, 53> : 2
<21, 55> : 2
<21, 61> : 2
<22, 23> : 2
<22, 26> : 2
<22, 28> : 2
<22, 30> : 2
<22, 31> : 2
<22, 38> : 2
<22, 50> : 2
<22, 52> : 2
<22, 54> : 2
<22, 55> : 2
<22, 62> : 2
<23, 27> : 2
<23, 29> : 2
<23, 30> : 2
<23, 31> : 2
<23, 39> : 2
<23, 51> : 2
<23, 53> : 2
<23, 54> : 2
<23, 55> : 2
<23, 63> : 2
<24, 25> : 2
<24, 26> : 2
<24, 27> : 2
<24, 28> : 2
<24, 29> : 2
<24, 30> : 2
<24, 40> : 2
<24, 48> : 2
<24, 56> : 2
<24, 57> : 2
<24, 58> : 2
<24, 60> : 2
<25, 26> : 2
<25, 27> : 2
<25, 28> : 2
<25, 29> : 2
<25, 31> : 2
<25, 41> : 2
<25, 49> : 2
<25, 56> : 2
<25, 57> : 2
<25, 59> : 2
<25, 61> : 2
<26, 27> : 2
<26, 28> : 2
<26, 30> : 2
<26, 31> : 2
<26, 42> : 2
<26, 50> : 2
<26, 56> : 2
<26, 58> : 2
<26, 59> : 2
<26, 62> : 2
<27, 29> : 2
<27, 30> : 2
<27, 31> : 2
<27, 43> : 2
<27, 51> : 2
<27, 57> : 2
<27, 58> : 2
<27, 59> : 2
<27, 63> : 2
<28, 29> : 2
<28, 30> : 2
<28, 31> : 2
<28, 44> : 2
<28, 52> : 2
<28, 56> : 2
<28, 60> : 2
<28, 61> : 2
<28, 62> : 2
<29, 30> : 2
<29, 31> : 2
<29, 45> : 2
<29, 53> : 2
<29, 57> : 2
<29, 60> : 2
<29, 61> : 2
<29, 63> : 2
<30, 31> : 2
<30, 46> : 2
<30, 54> : 2
<30, 58> : 2
<30, 60> : 2
<30, 62> : 2
<30, 63> : 2
<31, 47> : 2
<31, 55> : 2
<31, 59> : 2
<31, 61> : 2
<31, 62> : 2
<31, 63> : 2
<32, 33> : 2
<32, 34> : 2
<32, 35> : 2
<32, 36> : 2
<32, 37> : 2
<32, 38> : 2
<32, 40> : 2
<32, 41> : 2
<32, 42> : 2
<32, 44> : 2
<32, 48> : 2
<32, 49> : 2
<32, 50> : 2
<32, 52> : 2
<32, 56> : 2
<33, 34> : 2
<33, 35> : 2
<33, 36> : 2
<33, 37> : 2
<33, 39> : 2
<33, 40> : 2
<33, 41> : 2
<33, 43> : 2
<33, 45> : 2
<33, 48> : 2
<33, 49> : 2
<33, 51> : 2
<33, 53> : 2
<33, 57> : 2
<34, 35> : 2
<34, 36> : 2
<34, 38> : 2
<34, 39> : 2
<34, 40> : 2
<34, 42> : 2
<34, 43> : 2
<34, 46> : 2
<34, 48> : 2
<34, 50> : 2
<34, 51> : 2
<34, 54> : 2
<34, 58> : 2
<35, 37> : 2
<35, 38> : 2
<35, 39> : 2
<35, 41> : 2
<35, 42> : 2
<35, 43> : 2
<35, 47> : 2
<35, 49> : 2
<35, 50> : 2
<35, 51> : 2
<35, 55> : 2
<35, 59> : 2
<36, 37> : 2
<36, 38> : 2
<36, 39> : 2
<36, 40> : 2
<36, 44> : 2
<36, 45> : 2
<36, 46> : 2
<36, 48> : 2
<36, 52> : 2
<36, 53> : 2
<36, 54> : 2
<36, 60> : 2
<37, 38> : 2
<37, 39> : 2
<37, 41> : 2
<37, 44> : 2
<37, 45> : 2
<37, 47> : 2
<37, 49> : 2
<37, 52> : 2
<37, 53> : 2
<37, 55> : 2
<37, 61> : 2
<38, 39> : 2
<38, 42> : 2
<38, 44> : 2
<38, 46> : 2
<38, 47> : 2
<38, 50> : 2
<38, 52> : 2
<38, 54> : 2
<38, 55> : 2
<38, 62> : 2
<39, 43> : 2
<39, 45> : 2
<39, 46> : 2
<39, 47> : 2
<39, 51> : 2
<39, 53> : 2
<39, 54> : 2
<39, 55> : 2
<39, 63> : 2
<40, 41> : 2
<40, 42> : 2
<40, 43> : 2
<40, 44> : 2
<40, 45> : 2
<40, 46> : 2
<40, 48> : 2
<40, 56> : 2
<40, 57> : 2
<40, 58> : 2
<40, 60> : 2
<41, 42> : 2
<41, 43> : 2
<41, 44> : 2
<41, 45> : 2
<41, 47> : 2
<41, 49> : 2
<41, 56> : 2
<41, 57> : 2
<41, 59> : 2
<41, 61> : 2
<42, 43> : 2
<42, 44> : 2
<42, 46> : 2
<42, 47> : 2
<42, 50> : 2
<42, 56> : 2
<42, 58> : 2
<42, 59> : 2
<42, 62> : 2
<43, 45> : 2
<43, 46> : 2
<43, 47> : 2
<43, 51> : 2
<43, 57> : 2
<43, 58> : 2
<43, 59> : 2
<43, 63> : 2
<44, 45> : 2
<44, 46> : 2
<44, 47> : 2
<44, 52> : 2
<44, 56> : 2
<44, 60> : 2
<44, 61> : 2
<44, 62> : 2
<45, 46> : 2
<45, 47> : 2
<45, 53> : 2
<45, 57> : 2
<45, 60> : 2
<45, 61> : 2
<45, 63> : 2
<46, 47> : 2
<46, 54> : 2
<46, 58> : 2
<46, 60> : 2
<46, 62> : 2
<46, 63> : 2
<47, 55> : 2
<47, 59> : 2
<47, 61> : 2
<47, 62> : 2
<47, 63> : 2
<48, 49> : 2
<48, 50> : 2
<48, 51> : 2
<48, 52> : 2
<48, 53> : 2
<48, 54> : 2
<48, 56> : 2
<48, 57> : 2
<48, 58> : 2
<48, 60> : 2
<49, 50> : 2
<49, 51> : 2
<49, 52> : 2
<49, 53> : 2
<49, 55> : 2
<49, 56> : 2
<49, 57> : 2
<49, 59> : 2
<49, 61> : 2
<50, 51> : 2
<50, 52> : 2
<50, 54> : 2
<50, 55> : 2
<50, 56> : 2
<50, 58> : 2
<50, 59> : 2
<50, 62> : 2
<51, 53> : 2
<51, 54> : 2
<51, 55> : 2
<51, 57> : 2
<51, 58> : 2
<51, 59> : 2
<51, 63> : 2
<52, 53> : 2
<52, 54> : 2
<52, 55> : 2
<52, 56> : 2
<52, 60> : 2
<52, 61> : 2
<52, 62> : 2
<53, 54> : 2
<53, 55> : 2
<53, 57> : 2
<53, 60> : 2
<53, 61> : 2
<53, 63> : 2
<54, 55> : 2
<54, 58> : 2
<54, 60> : 2
<54, 62> : 2
<54, 63> : 2
<55, 59> : 2
<55, 61> : 2
<55, 62> : 2
<55, 63> : 2
<56, 57> : 2
<56, 58> : 2
<56, 59> : 2
<56, 60> : 2
<56, 61> : 2
<56, 62> : 2
<57, 58> : 2
<57, 59> : 2
<57, 60> : 2
<57, 61> : 2
<57, 63> : 2
<58, 59> : 2
<58, 60> : 2
<58, 62> : 2
<58, 63> : 2
<59, 61> : 2
<59, 62> : 2
<59, 63> : 2
<60, 61> : 2
<60, 62> : 2
<60, 63> : 2
<61, 62> : 2
<61, 63> : 2
<62, 63> : 2

mesh_test.h, 102, execute, `m.nsimplices()` = 64
verification.h, 30, verify, Interrogating mesh:
verification.h, 33, verify, `nunconnected_points` = 0
verification.h, 38, verify, `nduplicate_simplices` = 0
verification.h, 43, verify, `noverlapping_simplices` = 0
verification.h, 48, verify, `npartition_points` = 0
verification.h, 53, verify, `nisolated_simplices` = 0
verification.h, 58, verify, `ndegenerate_simplices` = 0
mesh_test.h, 106, execute, `construction_duration_ns.count()` = 202008200
